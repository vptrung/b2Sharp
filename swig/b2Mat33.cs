//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace b2Sharp {

public class b2Mat33 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal b2Mat33(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(b2Mat33 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~b2Mat33() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Box2DPINVOKE.delete_b2Mat33(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public b2Mat33() : this(Box2DPINVOKE.new_b2Mat33__SWIG_0(), true) {
  }

  public b2Mat33(b2Vec3 c1, b2Vec3 c2, b2Vec3 c3) : this(Box2DPINVOKE.new_b2Mat33__SWIG_1(b2Vec3.getCPtr(c1), b2Vec3.getCPtr(c2), b2Vec3.getCPtr(c3)), true) {
    if (Box2DPINVOKE.SWIGPendingException.Pending) throw Box2DPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetZero() {
    Box2DPINVOKE.b2Mat33_SetZero(swigCPtr);
  }

  public b2Vec3 Solve33(b2Vec3 b) {
    b2Vec3 ret = new b2Vec3(Box2DPINVOKE.b2Mat33_Solve33(swigCPtr, b2Vec3.getCPtr(b)), true);
    if (Box2DPINVOKE.SWIGPendingException.Pending) throw Box2DPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public b2Vec2 Solve22(b2Vec2 b) {
    b2Vec2 ret = new b2Vec2(Box2DPINVOKE.b2Mat33_Solve22(swigCPtr, b2Vec2.getCPtr(b)), true);
    if (Box2DPINVOKE.SWIGPendingException.Pending) throw Box2DPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void GetInverse22(b2Mat33 M) {
    Box2DPINVOKE.b2Mat33_GetInverse22(swigCPtr, b2Mat33.getCPtr(M));
  }

  public void GetSymInverse33(b2Mat33 M) {
    Box2DPINVOKE.b2Mat33_GetSymInverse33(swigCPtr, b2Mat33.getCPtr(M));
  }

  public b2Vec3 ex {
    set {
      Box2DPINVOKE.b2Mat33_ex_set(swigCPtr, b2Vec3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = Box2DPINVOKE.b2Mat33_ex_get(swigCPtr);
      b2Vec3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new b2Vec3(cPtr, false);
      return ret;
    } 
  }

  public b2Vec3 ey {
    set {
      Box2DPINVOKE.b2Mat33_ey_set(swigCPtr, b2Vec3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = Box2DPINVOKE.b2Mat33_ey_get(swigCPtr);
      b2Vec3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new b2Vec3(cPtr, false);
      return ret;
    } 
  }

  public b2Vec3 ez {
    set {
      Box2DPINVOKE.b2Mat33_ez_set(swigCPtr, b2Vec3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = Box2DPINVOKE.b2Mat33_ez_get(swigCPtr);
      b2Vec3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new b2Vec3(cPtr, false);
      return ret;
    } 
  }

}

}
